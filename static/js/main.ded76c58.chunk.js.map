{"version":3,"sources":["logo.svg","components/OutText/OutText.jsx","components/Out/Out.jsx","components/Home/Home.jsx","components/Main/Main.jsx","components/Rain/Rain.jsx","components/RainWrapper/RainWrapper.jsx","components/withWindowDimensions/withWindowDimensions.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","OutText","props","className","clicked","text","Out","useState","darkStyle","setDarkStyle","mouseDownHandler","active","mouseDown","mouseUpHandler","setTimeout","update","mouseUp","onMouseDown","onMouseUp","style","width","height","filterOff","filter","inner","Home","state","to_draw","string","split","ascii","bind","out","this","map","line","n_spaces","n_dots","indices","line_chars","forEach","char","index","push","n_slots","lineInfo","slots","Array","i","swpi","Math","floor","random","tmp","char_array","length","slot_index","join","setState","windowHeight","Component","Main","display","page","windowWidth","Rain","alphabet","ref","React","createRef","fontSize","drops","ctx","columns","rows","direction","draw","initDrops","current","getContext","x","fillStyle","fillRect","font","JSON","parse","stringify","fillText","id","withWindowDimensions","WrappedComponent","updateWindowDimensions","window","innerWidth","innerHeight","addEventListener","removeEventListener","isMobileSized","App","mobileSize","direction1","direction2","updatePage","console","log","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ded76c58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nexport default function OutText(props) {\n    return (\n        <div className={props.clicked ? \"text clickedText\" : \"text unclickedText\"}>\n            {props.text}\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport OutText from '../OutText/OutText'\n\nimport './Out.css'\n\nexport default function Out(props) {\n    const [darkStyle, setDarkStyle] = useState(false)\n    const mouseDownHandler = props.active ? () => mouseDown(setDarkStyle) : null\n    const mouseUpHandler = props.active ? () => mouseUp(setDarkStyle, props) : null\n    return (\n        <div className={darkStyle ? \"Out clicked\" : \"Out unclicked\"}\n            onMouseDown={mouseDownHandler}\n            onMouseUp={mouseUpHandler}\n            style={{ 'width': props.width, 'height': props.height }}\n        >\n            <div className=\"inner\" style={props.filterOff ? { filter: \"none\" } : null}>\n                {props.inner ?\n                    props.inner\n                    :\n                    <OutText\n                        text={props.text}\n                        clicked={darkStyle}\n                    />\n                }\n            </div>\n        </ div >\n    )\n}\n\nfunction mouseDown(setDarkStyle) {\n    setDarkStyle(true)\n}\n\nfunction mouseUp(setDarkStyle, props) {\n    setTimeout(() => {\n        setDarkStyle(false)\n        props.update()\n    }, 150)\n}\n","import React, { Component } from 'react'\nimport './Home.css'\n\n\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            to_draw: true,\n            string: `\n    .           ..         .           .       .           .           .\n    .         .            .          .       .\n            .         ..xxxxxxxxxx....               .       .             .\n    .             MWMWMWWMWMWMWMWMWMWMWMWMW                       .\n            IIIIMWMWMWMWMWMWMWMWMWMWMWMWMWMttii:        .           .\n.      IIYVVXMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWxx...         .           .\n    IWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMx..\n    IIWMWMWMWMWMWMWMWMWMW%WMWM%MWM%MWMWMWMWMWMWMWMWMWMWMWMWMWMWMx..        .\n    \"\"MWMWMWMWMWM\"\"\"\"\"\"\"\".  .:..   .\"\"\"\"\"MWMWMWMWMWMWMWMWMWMWMWMWMWti.\n.     \"\"   . \\`  .: . :. : .  . :.  .  . . .  \"\"\"\"MWMWMWMWMWMWMWMWMWMWMWMWMti=\n        . .   :\\` . :   .  .'.' '....xxxxx...,'. '   ' .\"\"\"YWMWMWMWMWMWMWMWMWMW+\n    ; . \\` .  . : . .' :  . ..XXXXXXXXXXXXXXXXXXXXx.    \\`     . \"YWMWMWMWMWMWMW\n.    .  .  .    . .   .  ..XXXXXXXXWWWWWWWWWWWWWWWWXXXX.  .     .     \"\"\"\"\"\"\"\n        ' :  : . : .  ...XXXXXWWW\"   W88N88@888888WWWWWXX.   .   .       . .\n    . ' .    . :   ...XXXXXXWWW\"    M88N88GGGGGG888^8M \"WMBX.          .   ..  :\n          :     ..XXXXXXXXWWW\"     M88888WWRWWWMW8oo88M   WWMX.     .    :    .\n           \"XXXXXXXXXXXXWW\"       WN8888WWWWW  W8@@@8M    BMBRX.         .  : :\n  .       XXXXXXXX=MMWW\":  .      W8N888WWWWWWWW88888W      XRBRXX.  .       .\n     ....  \"\"XXXXXMM::::. .        W8@889WWWWWM8@8N8W      . . :RRXx.    .\n          \\`\\`...'''  MMM::.:.  .      W888N89999888@8W      . . ::::\"RXV    .  :\n.        ..'''''      MMMm::.  .      WW888N88888WW     .  . mmMMMMMRXx\n      ..' .            \"\"MMmm .  .       WWWWWWW   . :. :,miMM\"\"\"  : \"\"\\`    .\n    .                .       \"\"MMMMmm . .  .  .   ._,mMMMM\"\"\"  :  ' .  :\n                .                  \"\"MMMMMMMMMMMMM\"\"\" .  : . '   .        .\n        .              .     .    .                      .         .\n.                                         .          .         .\n    `.split(\"!\")\n        }\n        this.ascii = this.ascii.bind(this)\n    }\n\n    ascii() {\n        let stringInfo = this.state.string.map(line => {\n            let n_spaces = 0\n            let n_dots = 0\n            let indices = []\n\n            let line_chars = line.split(\"\")\n\n            line_chars.forEach((char, index) => {\n                if (char === \" \") {\n                    n_spaces += 1\n                    indices.push(index)\n                }\n                if (char === \".\") {\n                    n_dots += 1\n                    indices.push(index)\n                }\n            })\n            return {\n                n_spaces,\n                n_dots,\n                n_slots: n_spaces + n_dots,\n                indices,\n                line,\n                line_chars\n            }\n        })\n\n        let out = stringInfo.map(lineInfo => {\n            let {\n                n_spaces,\n                n_dots,\n                n_slots,\n                indices,\n                line,\n                line_chars\n            } = lineInfo\n\n            //create and shuffle slots\n            let slots = new Array(n_slots)\n            for (let i = 0; i < n_slots; i++) {\n                slots[i] = line_chars[indices[i]]\n            }\n\n            for (let i = 0; i < n_slots; i++) {\n                let swpi = i + Math.floor(Math.random() * (n_slots - i));\n                // now swap elements at i and swpi\n                if (Math.random() > .95) {\n                    var tmp = slots[i];\n                    slots[i] = slots[swpi];\n                    slots[swpi] = tmp;\n                }\n\n            }\n\n            let char_array = new Array(line.length)\n\n            let slot_index = 0\n            for (let i = 0; i < line.length; i++) {\n                const char = line_chars[i]\n                if (char === \" \" || char === \".\") {\n                    char_array[i] = slots[[slot_index]]\n                    slot_index++\n                }\n                else {\n                    char_array[i] = line_chars[i]\n                }\n            }\n            return char_array.join(\"\")\n        })\n        this.setState({\n            string: out\n        })\n        setTimeout(this.ascii, 30)\n    }\n    componentDidMount() {\n        this.ascii()\n    }\n    componentDidUpdate() {\n        if (this.props.windowHeight > 500 && this.state.to_draw === false) {\n            this.setState({\n                to_draw: true\n            })\n        }\n        if (this.props.windowHeight < 500 && this.state.to_draw === true) {\n            this.setState({\n                to_draw: true\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Home\">\n                <h1 className=\"unclickedText\"><span className=\"bigChar\">B</span>EN <span className=\"bigChar\">T</span>AUSSIG</h1>\n\n                {this.state.to_draw ?\n                    <div className=\"ascii unclickedText\">{\n                        this.state.string\n                    }\n                    </div>\n                    :\n                    null\n                }\n\n                <h4 className=\"description unclickedText\">\n                    • Full-Stack Web Developer\n                <br /><br />\n                    • Software Engineer\n                <br /><br />\n                    • Electrical Engineer\n            </h4>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Out from '../Out/Out'\nimport Home from '../Home/Home'\n\nimport './Main.css'\n\nexport default class Main extends Component {\n    render() {\n        return (\n            <div className=\"Main\">\n                <div className=\"contentContainer\">\n                    <Out\n                        active={false}\n                        width=\"90%\"\n                        height=\"100%\"\n                        inner={\n                            <div style={{ display: \"flex\" }}>\n                                {this.props.page === \"home\" ?\n                                    <Home\n                                        windowWidth={this.props.windowWidth}\n                                        windowHeight={this.props.windowHeight}\n                                    />\n                                    :\n                                    null}\n\n                                {this.props.page === \"page2\" ?\n                                    <div>lolol</div> : null}\n\n                            </div>\n                        }\n                    />\n                </div>\n                <div className=\"buttonContainer\">\n                    <Out\n                        active={true}\n                        width=\"30%\"\n                        height=\"50px\"\n                        text={<h5><span className=\"bigChar\">H</span>OME</h5>}\n                        update={() => this.props.update('home')}\n\n                    />\n                    <Out\n                        active={true}\n                        width=\"30%\"\n                        height=\"50px\"\n                        text={\n                            <h5>PAGE</h5>\n                        }\n                        update={() => this.props.update('page2')}\n                    />\n                    <Out\n                        active={true}\n                        width=\"30%\"\n                        height=\"50px\"\n                        text={\n                            <h5>PROJECTS</h5>\n                        }\n                        update={() => this.props.update('page3')}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Rain.css'\n\nexport default class Rain extends Component {\n    constructor(props) {\n        super(props)\n        // this.alphabet = \"田由甲申甴电甶男甸甹町画甼甽甾甿畀畁畂畃畄畅畆畇畈畉畊畋界畍畎畏畐畑\".split(\"\")\n        // this.alphabet = \"АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя\".split(\"\") + this.alphabet\n        this.alphabet = `!\"$&'()*+,./0123456789:;?{}ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`\n        // + this.alphabet\n        this.ref = React.createRef()\n        this.fontSize = 25\n        this.state = {\n            drops: [],\n            ctx: null,\n            windowWidth: props.windowWidth,\n            windowHeight: props.windowHeight,\n            columns: 10,\n            rows: 10,\n            direction: this.props.direction\n        }\n        this.draw = this.draw.bind(this)\n        this.initDrops = this.initDrops.bind(this)\n    }\n\n    componentDidMount() {\n        this.initDrops()\n        this.ctx = this.ref.current.getContext('2d')\n        this.draw()\n    }\n\n    initDrops() {\n        let drops = []\n        let columns = this.props.windowWidth !== 0 ? this.props.windowWidth / (this.fontSize) : this.fontSize\n        columns = Math.floor(columns)\n        let rows = this.props.windowHeight !== 0 ? this.props.windowHeight / this.fontSize : this.fontSize\n        rows = Math.floor(rows) + 1\n\n        if (this.props.direction === \"up\" || this.props.direction === \"down\") {\n            if (this.state.drops.length !== columns) {\n                for (let x = 0; x < columns; x++) {\n                    drops[x] = Math.floor(Math.random() * this.props.windowHeight);\n                }\n                this.setState({\n                    drops,\n                    windowHeight: this.props.windowHeight,\n                    windowWidth: this.props.windowWidth / 4,\n                    columns,\n                    rows,\n                    direction: this.props.direction\n                })\n            }\n        }\n        if (this.props.direction === \"left\" || this.props.direction === \"right\") {\n            if (this.state.drops.length !== rows) {\n                for (let x = 0; x < rows; x++) {\n                    drops[x] = Math.floor(Math.random() * this.props.windowHeight);\n                }\n                this.setState({\n                    drops,\n                    windowHeight: this.props.windowHeight,\n                    windowWidth: this.props.windowWidth / 4,\n                    columns,\n                    rows,\n                    direction: this.props.direction\n                })\n            }\n        }\n    }\n\n    draw() {\n        if (this.props.windowWidth !== this.state.windowWidth || this.props.direction !== this.state.direction) {\n            this.initDrops()\n        }\n        this.ctx.fillStyle = \"rgba(254, 175, 202, .175)\";\n        this.ctx.fillRect(0, 0, this.state.windowWidth, this.state.windowHeight);\n\n        this.ctx.fillStyle = \"rgb(113, 161, 224)\";\n        this.ctx.font = this.fontSize + \"px bd-eject\";\n\n        let drops = JSON.parse(JSON.stringify(this.state.drops))\n        for (let i = 0; i < this.state.drops.length; i++) {\n            // select char\n            let text = this.alphabet[Math.floor(Math.random() * this.alphabet.length)]\n\n            // draw char\n            switch (this.props.direction) {\n                // down is default\n                default:\n                    this.ctx.fillText(text, i * this.fontSize, drops[i] * this.fontSize, this.fontSize - 1)\n\n                    if (drops[i] > this.props.windowHeight / this.fontSize && Math.random() > 0.95) {\n                        drops[i] = 0;\n                    }\n                    drops[i] += 1\n                    break;\n                case \"down\":\n                    this.ctx.fillText(text, i * this.fontSize, drops[i] * this.fontSize, this.fontSize - 1)\n\n                    if (drops[i] > this.props.windowHeight / this.fontSize && Math.random() > 0.9) {\n                        drops[i] = 0;\n                    }\n                    drops[i] += 1\n                    break;\n                case \"up\":\n                    this.ctx.fillText(text, i * this.fontSize, ((this.props.windowHeight / this.fontSize) - drops[i] + 1) * this.fontSize, this.fontSize - 1)\n\n                    if (drops[i] > this.props.windowHeight / this.fontSize && Math.random() > 0.9) {\n                        drops[i] = 0;\n                    }\n                    drops[i] += 1\n                    break;\n                case \"right\":\n                    this.ctx.fillText(text, (drops[i] - 1) * this.fontSize, i * this.fontSize, this.fontSize - 1)\n\n                    if (drops[i] > this.state.windowWidth / this.fontSize && Math.random() > 0.9) {\n                        drops[i] = 0;\n                    }\n                    drops[i] += 1\n                    break;\n\n                case \"left\":\n                    this.ctx.fillText(text, ((this.state.windowWidth / this.fontSize) - drops[i] + 1) * this.fontSize, i * this.fontSize, this.fontSize - 1)\n\n                    if (drops[i] > this.state.windowWidth / this.fontSize && Math.random() > 0.9) {\n                        drops[i] = 0;\n                    }\n                    drops[i] += 1\n                    break;\n            }\n\n        }\n        this.setState({\n            drops: drops\n        })\n        setTimeout(this.draw, 33)\n    }\n\n\n    render() {\n        return (\n            <canvas className=\"Rain\" width={this.props.windowWidth / 4} height={this.props.windowHeight} id={this.props.id} ref={this.ref}>\n            </canvas>\n        )\n    }\n}\n","import React from 'react'\nimport withWindowDimensions from '../withWindowDimensions/withWindowDimensions'\nimport Rain from '../Rain/Rain'\n\nfunction RainWrapper(props) {\n    return (\n        (props.windowWidth < 200) ?\n            null\n            :\n            <Rain\n                columns={props.columns}\n                id={props.id}\n                windowWidth={props.windowWidth}\n                windowHeight={props.windowHeight}\n                direction={props.direction}\n            />\n    )\n}\n\nexport default withWindowDimensions(RainWrapper)\n","import React, { Component } from \"react\";\n\nexport default function withWindowDimensions(WrappedComponent) {\n    return class extends Component {\n        state = { width: 0, height: 0 };\n\n        componentDidMount() {\n            this.updateWindowDimensions();\n            window.addEventListener(\"resize\", this.updateWindowDimensions);\n        }\n\n        componentWillUnmount() {\n            window.removeEventListener(\"resize\", this.updateWindowDimensions);\n        }\n\n        updateWindowDimensions = () => {\n            this.setState({ width: window.innerWidth, height: window.innerHeight });\n        };\n\n        render() {\n            return (\n                <WrappedComponent\n                    {...this.props}\n                    windowWidth={this.state.width}\n                    windowHeight={this.state.height}\n                    isMobileSized={this.state.width < 700}\n                />\n            );\n        }\n    };\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Main from './components/Main/Main'\nimport RainWrapper from './components/RainWrapper/RainWrapper'\nimport Out from './components/Out/Out'\nimport './App.css';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      mobileSize: null,\n      isMobileSized: null,\n      width: 0,\n      height: 0,\n      page: \"home\",\n      direction1: \"down\",\n      direction2: \"down\"\n    }\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.updatePage = this.updatePage.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  updatePage(page) {\n    console.log('UPDATEING PAGE')\n    console.log(page)\n    let direction1 = \"down\"\n    let direction2 = \"down\"\n    if (page === \"page2\") {\n      direction1 = \"right\"\n      direction2 = \"left\"\n    }\n    if (page === \"page3\") {\n      direction1 = \"up\"\n      direction2 = \"up\"\n    }\n    this.setState({\n      page,\n      direction1,\n      direction2\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        {(this.state.width > 745 && this.state.height > 500) ?\n          <div className=\"rainWrapper\" style={{ \"marginLeft\": \"30px\" }}>\n            <Out\n              inner={\n                <RainWrapper\n                  columns={10}\n                  id=\"rain1\"\n                  direction={this.state.direction1}\n                />\n              }\n              height=\"100%\"\n              width=\"100%\"\n              filterOff={true}\n            />\n          </div>\n          :\n          null\n        }\n        <Main\n          windowHeight={this.state.windowHeight}\n          windowWidth={this.state.windowWidth}\n          update={this.updatePage}\n          page={this.state.page}\n        />\n\n        {this.state.width > 875 ?\n          <div className=\"rainWrapper\" style={{ \"margin-right\": \"30px\" }}>\n            <Out\n              inner={\n                <RainWrapper\n                  columns={10}\n                  id=\"rain2\"\n                  direction={this.state.direction2}\n                />\n              }\n              height=\"100%\"\n              width=\"100%\"\n              filterOff={true}\n            />\n          </div>\n          :\n          null\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}